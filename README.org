#+TITLE: Better Novelupdates RSS
#+AUTHOR: aerits

* About

Better Novelupdates RSS is a command line script that allows you to mark chapters on novelupdates.com novels as read.

BNR (better novelupdates rss) is useful if you follow novelupdates from an rss reader and don't want to navigate away from the rss feed to mark new chapters as read.

* Usage

#+BEGIN_SRC shell
  git clone https://github.com/aerits/Better-Novelupdates-RSS
  cd better-novelupdates-rss/src

  python main.py [INSERT LINK TO NOVEL ON NOVELUPDATES] [INSERT LINK TO CHAPTER ON NOVELUDPATES]

  # example
  python main.py https://www.novelupdates.com/series/ikemen-ni-tenseishita-kedo-cheat-ha-dekimasenseshita/ https://www.novelupdates.com/extnu/7175080/
#+END_SRC

You can create a script to run on your feed reader to automatically run this. Here is an example I wrote in elisp for the elfeed reader in Emacs.

#+BEGIN_SRC elisp
(defun nu-read ()
  "mark novelupdates chapter as read
  in the elfeed entry and navigate
  to the chapter in eww"
  (interactive)
  (progn (re-search-forward "novelupdates.com/series")
	 (setq series (thing-at-point 'url))
	 ;; (message series)
	 (re-search-backward "novelupdates.com/extnu")
	 (setq chapter (thing-at-point 'url))
	 ;; (message chapter)
	 (message
	  (shell-command-to-string (concat "python ~/Documents/git/better-novelupdates-rss/src/main.py "
					   (concat series
						   (concat " " chapter)))))
	 (eww (thing-at-point 'url))))
(defun nu-mark-read ()
  "do the same thing as the last
  function except without eww"
  (interactive)
  (progn (re-search-forward "novelupdates.com/series")
	 (setq series (thing-at-point 'url))
	 ;; (message series)
	 (re-search-backward "novelupdates.com/extnu")
	 (setq chapter (thing-at-point 'url))
	 ;; (message chapter)
	 (message
	  (shell-command-to-string (concat "python ~/Documents/git/better-novelupdates-rss/src/main.py "
					   (concat series
						   (concat " " chapter)))))))
#+END_SRC

* License

#+BEGIN_SRC
This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.

In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <http://unlicense.org/>
#+END_SRC
